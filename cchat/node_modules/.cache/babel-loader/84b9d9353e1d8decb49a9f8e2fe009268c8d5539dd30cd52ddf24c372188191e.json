{"ast":null,"code":"var _jsxFileName = \"/home/shivam/Documents/React messaging app/CHAT APP/cchat/src/component/Message/Message.js\";\nimport React from 'react';\nimport './Message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = _ref => {\n  let {\n    user,\n    message,\n    classs\n  } = _ref;\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `messageBox ${classs}`,\n      children: `${user}:${message}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  } else if (user === 'Admin') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminmsg\",\n      children: `${user}:${message}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `messageBox ${classs}`,\n      children: `You: ${message}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","Message","user","message","classs"],"sources":["/home/shivam/Documents/React messaging app/CHAT APP/cchat/src/component/Message/Message.js"],"sourcesContent":["import React from 'react'\nimport './Message.css'\n\nconst Message = ({user,message,classs}) => {\n    if(user){\n        return (\n            <div className= {`messageBox ${classs}`}>\n                {`${user}:${message}`}\n              \n            </div>\n          )\n\n    }\n    else if(user==='Admin'){\n        return(\n            <div className='adminmsg'>\n                {`${user}:${message}`}\n\n            </div>\n        )\n    }\n\n    else{\n        return (\n            <div className= {`messageBox ${classs}`}>\n                {`You: ${message}`}\n              \n            </div>\n          )\n\n    }\n  \n}\n\nexport default Message\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAA;AAEtB,MAAMC,OAAO,GAAG,QAA2B;EAAA,IAA1B;IAACC,IAAI;IAACC,OAAO;IAACC;EAAM,CAAC;EAClC,IAAGF,IAAI,EAAC;IACJ,oBACI;MAAK,SAAS,EAAI,cAAaE,MAAO,EAAE;MAAA,UAClC,GAAEF,IAAK,IAAGC,OAAQ;IAAC;MAAA;MAAA;MAAA;IAAA,QAEnB;EAGd,CAAC,MACI,IAAGD,IAAI,KAAG,OAAO,EAAC;IACnB,oBACI;MAAK,SAAS,EAAC,UAAU;MAAA,UACnB,GAAEA,IAAK,IAAGC,OAAQ;IAAC;MAAA;MAAA;MAAA;IAAA,QAEnB;EAEd,CAAC,MAEG;IACA,oBACI;MAAK,SAAS,EAAI,cAAaC,MAAO,EAAE;MAAA,UAClC,QAAOD,OAAQ;IAAC;MAAA;MAAA;MAAA;IAAA,QAEhB;EAGd;AAEJ,CAAC;AAAA,KA7BKF,OAAO;AA+Bb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}